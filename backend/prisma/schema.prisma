// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ----- enums -----
enum DemandType {
  DIAGNOSTICO
  MANUTENCAO
  CONFIGURACAO
  INSTALACAO
  OUTRO
}

enum DemandStatus {
  PENDENTE
  EM_ANDAMENTO
  CONCLUIDA
  CANCELADA
}

enum DemandPriority {
  BAIXA
  MEDIA
  ALTA
  CRITICA
}


enum UserRole {
  ADMIN
  CONSULTOR
  ATENDENTE
}

enum ActionType {
  ANALISE
  CONFIGURACAO
  MANUTENCAO
  COMUNICACAO
  RESOLUCAO
}

// ----- models -----
model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String   // hash
  role      UserRole @default(ATENDENTE)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  actions   Action[]
}

model Provider {
  id           String   @id @default(uuid())
  nomeFantasia String
  responsavel  String
  email        String  @unique
  telefone     String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  demandas     Demand[]

  @@index([nomeFantasia])
}

model Demand {
  id          String          @id @default(uuid())
  titulo      String
  descricao   String
  tipo        DemandType
  status      DemandStatus    @default(PENDENTE)
  prioridade  DemandPriority  @default(BAIXA) // novo campo
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt

  providerId  String
  provider    Provider        @relation(fields: [providerId], references: [id], onDelete: Restrict, onUpdate: Cascade)

  actions     Action[]

  @@index([providerId])
  @@index([status])
  @@index([tipo])
  @@index([prioridade]) // facilita filtros por prioridade
}


model Action {
  id          String     @id @default(uuid())
  descricao   String
  tipo        ActionType
  executadaEm DateTime   @default(now())

  demandId    String
  demand      Demand     @relation(fields: [demandId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  tecnicoId   String?
  tecnico     User?      @relation(fields: [tecnicoId], references: [id], onDelete: SetNull)

  @@index([demandId])
  @@index([tipo])
}
